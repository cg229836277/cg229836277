---
layout: post
title:  "html-文档和网站结构（非原创）"
date:   2021-2-20 11:09:22 +0800
categories: html
---

> 文章来源于[https://developer.mozilla.org/](https://developer.mozilla.org/)

> https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure

## 1、文档的基本组成部分

一个网页可能看起来跟别的文档不一样，但是他们基本都有相似的结构，除非这个网页是全屏视频或游戏。

一个网页基本由如下几个部分构成：

**header:**

在网页的顶部以条状的方式展现头，log或者标签栏。网页头部在子页面之间切换时不会消失而是常驻顶部。

**navigation bar:**

链接网站的主要部分，里面主要展示菜单，链接，tab等。

跟头部信息一样，当子页面切换时，导航栏一般保留在页面的固定位置。

当网页有不连续的导航栏，会让用户感到困惑，这样让浏览变得困难。许多网页开发者认为导航栏应该成为header的一部分，而不是单独分离出来作为一个组件，但这不是必须的。事实上，有些人还认为，将两者分开有助于提高可访问性
，因为如果这两个功能分开，屏幕阅读器可以更好地阅读这两个功能。

**main content:**

中心的一个大区域，包含给定网页的大部分独特内容，例如，你想看的视频，或你正在阅读的主要故事，或你想查看的地图，或新闻标题等。这是网站的一部分，肯定会因页面而异！

**sidebar:**

一些额外信息、链接、引用、广告等。通常，这与主要内容中包含的内容有关（例如，在新闻文章页面上，侧边栏可能包含作者的个人简历或相关文章的链接），但也有一些情况下，您会发现一些重复出现的元素，如辅助导航系统。

**footer:**

放置页面底部的水平条状区域，通常包含细则、版权声明或联系信息。这是一个放置公共信息（如标题）的地方，但通常情况下，这些信息不是关键的或次要的网站本身。页脚有时也用于搜索引擎优化的目的，通过提供快速访问流行内容的链接。

一个典型的网站可能会是如下这种结构：

![](https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure/sample-website.png)

## 2、html 结构化内容

上面显示的简单示例并不漂亮，但是对于说明典型的网站布局示例而言，它是非常好的。有些网站上有更多的专栏，有些则复杂得多，但是您可以理解。使用正确的CSS，您几乎可以使用任何元素来包裹不同的部分，并使其看起来像您想要的那样，但是如前所述，我们需要尊重语义并将正确的元素用于正确的工作。

为了实现这种语义标记，HTML提供了专用的标记，您可以使用这些标记来表示这些节，例如：

- header: \<header>.
- navigation bar: \<nav>.
- main content: \<main>, \<article>, \<section>, and \<div> 元素表示的各种内容的子结构。.
- sidebar: \<aside>; 经常放置在\<main>元素中.
- footer: \<footer>.

示例如下：

```html
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">

    <title>My page title</title>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300|Sonsie+One" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="style.css">

    <!-- the below three lines are a fix to get HTML5 semantic elements working in old versions of Internet Explorer-->
    <!--[if lt IE 9]>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.js"></script>
    <![endif]-->
  </head>

  <body>
    <!-- Here is our main header that is used across all the pages of our website -->

    <header>
      <h1>Header</h1>
    </header>

    <nav>
      <ul>
        <li><a href="#">Home</a></li>
        <li><a href="#">Our team</a></li>
        <li><a href="#">Projects</a></li>
        <li><a href="#">Contact</a></li>
      </ul>

       <!-- A Search form is another common non-linear way to navigate through a website. -->

       <form>
         <input type="search" name="q" placeholder="Search query">
         <input type="submit" value="Go!">
       </form>
     </nav>

    <!-- Here is our page's main content -->
    <main>

      <!-- It contains an article -->
      <article>
        <h2>Article heading</h2>

        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Donec a diam lectus. Set sit amet ipsum mauris. Maecenas congue ligula as quam viverra nec consectetur ant hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur.</p>

        <h3>Subsection</h3>

        <p>Donec ut librero sed accu vehicula ultricies a non tortor. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aenean ut gravida lorem. Ut turpis felis, pulvinar a semper sed, adipiscing id dolor.</p>

        <p>Pelientesque auctor nisi id magna consequat sagittis. Curabitur dapibus, enim sit amet elit pharetra tincidunt feugiat nist imperdiet. Ut convallis libero in urna ultrices accumsan. Donec sed odio eros.</p>

        <h3>Another subsection</h3>

        <p>Donec viverra mi quis quam pulvinar at malesuada arcu rhoncus. Cum soclis natoque penatibus et manis dis parturient montes, nascetur ridiculus mus. In rutrum accumsan ultricies. Mauris vitae nisi at sem facilisis semper ac in est.</p>

        <p>Vivamus fermentum semper porta. Nunc diam velit, adipscing ut tristique vitae sagittis vel odio. Maecenas convallis ullamcorper ultricied. Curabitur ornare, ligula semper consectetur sagittis, nisi diam iaculis velit, is fringille sem nunc vet mi.</p>
      </article>

      <!-- the aside content can also be nested within the main content -->
      <aside>
        <h2>Related</h2>

        <ul>
          <li><a href="#">Oh I do like to be beside the seaside</a></li>
          <li><a href="#">Oh I do like to be beside the sea</a></li>
          <li><a href="#">Although in the North of England</a></li>
          <li><a href="#">It never stops raining</a></li>
          <li><a href="#">Oh well...</a></li>
        </ul>
      </aside>

    </main>

    <!-- And here is our main footer that is used across all the pages of our website -->

    <footer>
      <p>©Copyright 2050 by nobody. All rights reversed.</p>
    </footer>

  </body>
</html>
```

## 3、更详细的HTML布局元素

最好详细了解所有HTML分段元素的总体含义-随着您开始获得有关Web开发的更多经验，您将逐步进行处理。阅读我们的HTML元素参考，可以找到很多详细信息。现在，这些是您应该尝试理解的主要定义：

- \<main>用于此页面的唯一内容。每页仅使用一次\<main>，并将其直接放在\<body>中。理想情况下，不应将其嵌套在其他元素中。
- \<article>围着一块相关内容，这些内容本身就有意义，而没有页面的其余部分（例如，单个博客帖子）。
- \<section>与\<article>相似，但更多的是将页面的单个部分组合在一起，这些部分构成一个功能（例如，迷你地图或一组文章标题和摘要）或主题。最佳做法是在每个部分以标题开头；还请注意，您可以根据上下文将\<article>分解为不同的\<section>，或将\<section>分解为不同的\<article>。
- \<aside>包含与主要内容不直接相关的内容，但可以提供与主要内容间接相关的其他信息（词汇表条目，作者传记，相关链接等）。
- \<header>代表一组介绍性内容。如果它是\<body>的子项，则定义网页的全局标题，但是如果它是\<article>或\<section>的子项，则定义该节的特定标题（尽量不要将其与标题和标题混淆） ）。
- \<nav>包含页面的主要导航功能。辅助链接等将不会进入导航。
- \<footer>代表页面的一组最终内容。

### 3.1 非语义包装

有时，您会遇到找不到理想的语义元素来将某些项目组合在一起或包装某些内容的情况。有时，您可能只想将一组元素组合在一起，将它们作为一个单独的CSS或JavaScript的实体来操作。对于此类情况，HTML提供了\<div>和\<span>元素。您最好将它们与适当的class属性一起使用，以便为它们提供某种标签，以便可以轻松地将它们作为目标。

<b>\<span></b>是一个内联非语义元素，仅当您无法想到更好的语义文本元素来包装内容或不想添加任何特定含义时才应使用。例如：

```html
<p>The King walked drunkenly back to his room at 01:00, the beer doing nothing to aid
him as he staggered through the door <span class="editor-note">[Editor's note: At this point in the
play, the lights should be down low]</span>.</p>
```

在这种情况下，编者注应该只是为导演提供额外的指导，而不应该有额外的语义。对于有视力的用户，CSS可能会被用来将注释与主文本稍微隔开。


<b>\<div></b>是一个块级别的非语义元素，仅当您无法想到要使用的更好的语义块元素，或者不想添加任何特定含义时才应使用。例如，假设您有一个购物车小部件，您可以选择在电子商务网站上的任何时间点上拉：

```html
<div class="shopping-cart">
  <h2>Shopping cart</h2>
  <ul>
    <li>
      <p><a href=""><strong>Silver earrings</strong></a>: $99.95.</p>
      <img src="../products/3333-0985/thumb.png" alt="Silver earrings">
    </li>
    <li>
      ...
    </li>
  </ul>
  <p>Total cost: $237.89</p>
</div>
```

### 3.2 换行符和水平规则

\<br>和\<hr>是您偶尔要使用的两个元素：

- <b>\<br></b>

\<br>在段落中创建换行符；这是在需要一系列固定短小文字的情况下（例如在邮寄地址或一首诗中）强制生成固定结构的唯一方法。例如：

```html
<p>There once was a man named O'Dell<br>
Who loved to write HTML<br>
But his structure was bad, his semantics were sad<br>
and his markup didn't read very well.</p>
```
效果如下：

<p>There once was a man named O'Dell<br>
Who loved to write HTML<br>
But his structure was bad, his semantics were sad<br>
and his markup didn't read very well.</p>

如果没有<br>元素，则该段落将仅显示在一个较长的行中（正如我们在本课程前面所说的那样，HTML会忽略大多数空白）。

- <b>\<hr></b>

\<hr>元素在文档中创建一个水平规则，该水平规则表示文本的主题更改（例如主题或场景的更改）。在视觉上，它看起来像一条水平线。举个例子：

```html
<p>Ron was backed into a corner by the marauding netherbeasts. Scared, but determined to protect his friends, he raised his wand and prepared to do battle, hoping that his distress call had made it through.</p>
<hr>
<p>Meanwhile, Harry was sitting at home, staring at his royalty statement and pondering when the next spin off series would come out, when an enchanted distress letter flew through his window and landed in his lap. He read it hazily and sighed; "better get back to work then", he mused.</p>
```

效果如下：

<p>Ron was backed into a corner by the marauding netherbeasts. Scared, but determined to protect his friends, he raised his wand and prepared to do battle, hoping that his distress call had made it through.</p>
<hr>
<p>Meanwhile, Harry was sitting at home, staring at his royalty statement and pondering when the next spin off series would come out, when an enchanted distress letter flew through his window and landed in his lap. He read it hazily and sighed; "better get back to work then", he mused.</p>


